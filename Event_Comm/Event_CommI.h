// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2.5
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:1616

#ifndef EVENT_COMMI_PTRUWM_H_
#define EVENT_COMMI_PTRUWM_H_

#include "Event_CommS.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

class  Event_Comm_Consumer_i
  : public virtual POA_Event_Comm::Consumer
{
public:
  // Constructor
  Event_Comm_Consumer_i (void);

  // Destructor
  virtual ~Event_Comm_Consumer_i (void);

  virtual
  void push (
    const ::Event_Comm::Event & event_instance);

  virtual
  void disconnect (
    const char * reason);
};

class  Event_Comm_Notifier_i
  : public virtual POA_Event_Comm::Notifier
{
public:
  // Constructor
  Event_Comm_Notifier_i (void);

  // Destructor
  virtual ~Event_Comm_Notifier_i (void);

  virtual
  void disconnect (
    const char * reason);

  virtual
  void push (
    const ::Event_Comm::Event & event_instance);

  virtual
  void subscribe (
    ::Event_Comm::Consumer_ptr subscriber,
    const char * filtering_criteria);

  virtual
  void unsubscribe (
    ::Event_Comm::Consumer_ptr unsubscriber,
    const char * filtering_criteria);
};


#endif /* EVENT_COMMI_H_  */
